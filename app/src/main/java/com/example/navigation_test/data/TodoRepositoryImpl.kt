package com.example.navigation_test.dataimport android.app.Applicationimport androidx.lifecycle.LiveDataimport androidx.lifecycle.Transformationsimport com.example.navigation_test.domain.models.Todoimport com.example.navigation_test.domain.repository.TodoRepositoryclass TodoRepositoryImpl(application: Application) : TodoRepository {    private val todoListDao = AppDatabase.getInstance(application).todoListDao()    private val mapper = TodoListMapper()    override suspend fun addTodo(todo: Todo) {        todoListDao.addTodoItem(mapper.mapEntityToDbModel(todo))    }    override suspend fun deleteTodo(todo: Todo) {        todoListDao.deleteTodoItem(todo.id)    }    override suspend fun editTodo(todo: Todo) {        todoListDao.addTodoItem(mapper.mapEntityToDbModel(todo))    }    override suspend fun getTodo(todoId: Int): Todo {        val dbModel = todoListDao.getTodoItem(todoId)        return mapper.mapDbModelToEntity(dbModel)    }    override fun getTodoList(): LiveData<List<Todo>> = Transformations.map(        todoListDao.getTodoList()    ) {        mapper.mapListDbModelToListEntity(it)    }}