package com.example.navigation_test.presentation.screensimport androidx.compose.material.FloatingActionButtonimport androidx.compose.material.Iconimport androidx.compose.material.Scaffoldimport androidx.compose.material.icons.Iconsimport androidx.compose.material.icons.filled.Addimport androidx.compose.runtime.Composableimport androidx.compose.runtime.getValueimport androidx.compose.ui.graphics.Colorimport androidx.navigation.compose.currentBackStackEntryAsStateimport androidx.navigation.compose.rememberNavControllerimport com.example.navigation_test.presentation.navigation.AppNavGraphimport com.example.navigation_test.presentation.navigation.ScreenRouts@Composablefun MainScreen() {    val navHostController = rememberNavController()    val navBackStackEntry by navHostController.currentBackStackEntryAsState()    val currentRout = navBackStackEntry?.destination?.route    Scaffold(        floatingActionButton = {            if (currentRout == ScreenRouts.ROUT_TODOLIST) {                FloatingActionButton(                    onClick = {                        navHostController.navigate(ScreenRouts.ROUT_ADD_TODO) {                            launchSingleTop = true                            popUpTo(ScreenRouts.TotoList.rout)                        }                    },                    backgroundColor = Color.Black,                    contentColor = Color.White                ) {                    Icon(                        Icons.Filled.Add, contentDescription = "add button"                    )                }            }        }    ) {paddingValues ->        AppNavGraph(            navHostController = navHostController,            todoListScreenContent = {                TodoListScreen(                    paddingValues = paddingValues,                    navHostController = navHostController,                )            }, addTodoScreenContent = {                AddItemScreen(                    navHostController = navHostController,                    screenMode = ScreenRouts.ADD_TODO_SCREEN_MODE                )            },            editTodoScreenContent = {  todoItem ->                AddItemScreen(                    navHostController = navHostController,                    screenMode = ScreenRouts.EDIT_TODO_SCREEN_MODE,                    todo = todoItem                )            }        )    }}