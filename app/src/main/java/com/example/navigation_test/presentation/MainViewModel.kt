package com.example.navigation_test.presentationimport android.app.Applicationimport androidx.lifecycle.AndroidViewModelimport androidx.lifecycle.viewModelScopeimport com.example.navigation_test.data.TodoRepositoryImplimport com.example.navigation_test.domain.models.Todoimport com.example.navigation_test.domain.useCases.DeleteTodoUseCaseimport com.example.navigation_test.domain.useCases.EditTodoUseCaseimport com.example.navigation_test.domain.useCases.GetTodoListUseCaseimport kotlinx.coroutines.launchclass MainViewModel(application: Application) : AndroidViewModel(application) {    private val repository = TodoRepositoryImpl(application)    private val deleteTodoUseCase = DeleteTodoUseCase(repository)    private val editTodoUseCase = EditTodoUseCase(repository)    private val getTodoListUseCase = GetTodoListUseCase(repository)    val todoList = getTodoListUseCase.invoke()    fun deleteTodo(todo: Todo) {        viewModelScope.launch {            deleteTodoUseCase.invoke(todo)        }    }    fun changeEnableState(todo: Todo) {        viewModelScope.launch {            val newTodo = todo.copy(completed = !todo.completed)            editTodoUseCase(newTodo)        }    }}